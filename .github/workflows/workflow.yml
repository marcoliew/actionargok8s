name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKER_PASSWORD }}
  APP_NAME: gaargok8s
  USER_NAME: marcoliew
  #X: 'date +%s'

  TEST_TAG: marcoliew/gaargok8s:test
  LATEST_TAG: marcoliew/gaargok8s:latest  

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    # - name: Checkout code
    #   uses: actions/checkout@v3

    # - name: Get the version
    #   id: get_version
    #   run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: Login to Docker Hub marcoliew
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    


    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v3
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3

    - name: Build and push for testing
      uses: docker/build-push-action@v5
      with:
        load: true
        context: "{{defaultContext}}:docker"
        file: Dockerfile
        platforms: linux/amd64
        tags: ${{ env.TEST_TAG }}
        #tags: ${{ env.USER_NAME }}/${{ env.APP_NAME }}:latest
        # secrets: |
        #   "username=${{ secrets.DOCKERHUB_USERNAME }}"
        #   "password=${{ secrets.DOCKERHUB_TOKEN }}"    

    - name: Test
      run: |
        docker run -d -p 8081:80 --name gaargok8s-ct ${{ env.TEST_TAG }} 
        sudo apt install curl
        curl http://localhost:8081
        docker stop gaargok8s-ct
        docker rm gaargok8s-ct


    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ env.LATEST_TAG }}    

    # - name: push with timestamp tag
    #   run: |
    #     docker build -f docker/Dockerfile . -t ${USER_NAME}/${APP_NAME}:latest
    #     docker push ${USER_NAME}/${APP_NAME}:latest